{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addNewMovie","useState","setMovie","query","setQuery","error","setError","handleSubmit","event","preventDefault","onSubmit","htmlFor","onChange","target","value","type","id","placeholder","onClick","title","fetch","then","response","json","newMovie","App","setMovies","prevMovies","find","addMovie","ReactDOM","render","document","getElementById"],"mappings":"6TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,cCLRC,G,MAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAeMC,EAAe,SACnBC,GAGAA,EAAMC,iBAEDrB,GACHkB,GAAS,GAGPlB,GACFY,EAAYZ,GAvBdc,EAAS,MACTE,EAAS,IACTE,GAAS,IAuCX,OACE,qCACE,uBAAMI,SAAUH,EAAclB,UAAU,aAAxC,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQsB,QAAQ,cAAjC,yBAIA,qBAAKtB,UAAU,UAAf,SACE,uBACEuB,SA9CS,SACnBJ,GAEAF,GAAS,GACTF,EAASI,EAAMK,OAAOC,QA2CZA,MAAOX,EACPY,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ5B,UAAU,sBAIbgB,GACC,mBAAGhB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,QAzCM,WC3CI,IAACC,KD4CZhB,EC3CXiB,MAAM,GAAD,OAHW,+CAGX,OAAgBD,IAClBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WD0CXF,MAAK,SAAAG,GACdA,EAAS/B,OACZa,GAAS,GAGPkB,EAAS/B,OACXS,EAASsB,OAmCHT,KAAK,SACL1B,UAAU,kBAHZ,4BASF,qBAAKA,UAAU,UAAf,SACE,wBACE6B,QAASX,EACTQ,KAAK,SACL1B,UAAU,oBAHZ,qCAWN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACC,cAAC,EAAD,CAAWA,MAAOA,YExGfqC,EAAgB,WAC3B,MAA4BxB,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe8B,EAAf,KAaA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,YAjBG,SAACZ,GACnBsC,GAAU,SAAAC,GACR,OAAIA,EAAWC,MAAK,SAAAC,GAAQ,OAAIA,EAAS/B,SACnCV,EAAMU,UACH6B,EAGH,CAAEvC,GAAR,mBAAkBuC,gBCXxBG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.76432562.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ninterface Props {\n  addNewMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addNewMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n\n  const reset = () => {\n    setMovie(null);\n    setQuery('');\n    setError(false);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setError(false);\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = (\n    event:\n    React.MouseEvent<HTMLButtonElement> | React.FormEvent<HTMLFormElement>,\n  ) => {\n    event.preventDefault();\n\n    if (!movie) {\n      setError(true);\n    }\n\n    if (movie) {\n      addNewMovie(movie);\n    }\n\n    reset();\n  };\n\n  const findMovie = () => {\n    getMovie(query).then(newMovie => {\n      if (!newMovie.Title) {\n        setError(true);\n      }\n\n      if (newMovie.Title) {\n        setMovie(newMovie);\n      }\n    });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              onChange={handleChange}\n              value={query}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={findMovie}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              onClick={handleSubmit}\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","const API_MOVIE = 'https://www.omdbapi.com/?apikey=d44a5ba2&t=';\n\nexport const getMovie = (title: string) => (\n  fetch(`${API_MOVIE}${title}`)\n    .then(response => response.json())\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (movie: Movie) => {\n    setMovies(prevMovies => {\n      if (prevMovies.find(addMovie => addMovie.imdbID\n        === movie.imdbID)) {\n        return prevMovies;\n      }\n\n      return [movie, ...prevMovies];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}